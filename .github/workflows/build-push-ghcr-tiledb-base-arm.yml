name: Build & Push TileDB Base (arm)

on:
  push:
    branches: [main]
    paths:
      - .github/workflows/build-push-ghcr-tiledb-base-arm.yml
      - "Dockerfile.tiledb-base"
      - "versions/tiledb-base.txt"
  pull_request:
    paths:
      - .github/workflows/build-push-ghcr-tiledb-base-arm.yml
      - "Dockerfile.tiledb-base"
      - "versions/tiledb-base.txt"

permissions:
  contents: read
  packages: write

env:
  REGISTRY: ghcr.io
  OWNER: ${{ github.repository_owner }}

jobs:
  build:
    runs-on: ubuntu-24.04-arm
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: cc-tiledb-base-arm
            dockerfile: Dockerfile.tiledb-base
            version_file: versions/tiledb-base.txt

    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-buildx-action@v3

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Read and split version
        id: version
        run: |
          v=$(cat ${{ matrix.version_file }})
          echo "version=$v" >> "$GITHUB_OUTPUT"
          echo "minor=${v%.*}" >> "$GITHUB_OUTPUT"
          echo "major=${v%%.*}" >> "$GITHUB_OUTPUT"

      - name: Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.OWNER }}/${{ matrix.name }}
          tags: |
            type=raw,value=${{ steps.version.outputs.version }}
            type=raw,value=${{ steps.version.outputs.minor }}
            type=raw,value=${{ steps.version.outputs.major }}
            type=raw,value=latest,enable=${{ github.ref == 'refs/heads/main' }}
            type=sha,format=short,prefix=sha-

      - name: Build & (conditionally) push image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ${{ matrix.dockerfile }}
          platforms: linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
